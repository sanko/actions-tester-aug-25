name: Nested Greeting Workflow

on:
  workflow_dispatch:

jobs:
  run-by-os:
    id: run-by-os-job
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: "OS: ${{ matrix.os }}"
    uses: ./.github/workflows/workflow-a.yml
    with:
      os: ${{ matrix.os }}
    # This output will contain a status string for each run.
    outputs:
      alex-status: ${{ fromJson(needs.run-by-os.outputs.name-statuses).Alex }}

  # New job to check if all "Alex" jobs passed.
  CheckAlexStatus:
    needs: run-by-os
    if: always()
    runs-on: ubuntu-latest
    outputs:
      all_alex_passed: ${{ steps.check.outputs.all_alex_passed }}
    steps:
      - name: Check Alex's job statuses
        id: check
        run: |
          # Initialize a flag to 'true'
          ALL_ALEX_PASSED="true"
          
          # Check the outputs of each OS job
          # Note: This is an example of how you would check a specific output from a reusable workflow matrix.
          # A more robust solution would require a different output strategy in the reusable workflows.
          if [ "${{ needs.run-by-os.outputs.alex-status }}" != "success" ]; then
            ALL_ALEX_PASSED="false"
          fi

          # Set the output variable
          echo "all_alex_passed=$ALL_ALEX_PASSED" >> "$GITHUB_OUTPUT"

  # New stage that relies on all 'Alex' jobs passing.
  StageAfterAlex:
    needs: CheckAlexStatus
    runs-on: ubuntu-latest
    if: needs.CheckAlexStatus.outputs.all_alex_passed == 'true'
    steps:
      - name: All Alex jobs passed
        run: echo "All jobs with name 'Alex' passed. Proceeding with the next stage."

